//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	triton_gelu_kernel      // -- Begin function triton_gelu_kernel
                                        // @triton_gelu_kernel
.visible .entry triton_gelu_kernel(
	.param .u64 .ptr .global .align 1 triton_gelu_kernel_param_0,
	.param .u64 .ptr .global .align 1 triton_gelu_kernel_param_1,
	.param .u32 triton_gelu_kernel_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<49>;
	.reg .f32 	%f<113>;
	.reg .b64 	%rd<8>;
	.loc	1 15 0                          // ops.py:15:0
$L__func_begin0:
	.loc	1 15 0                          // ops.py:15:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_gelu_kernel_param_0];
	ld.param.u64 	%rd6, [triton_gelu_kernel_param_1];
$L__tmp0:
	.loc	1 16 24                         // ops.py:16:24
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 17 20                         // ops.py:17:20
	shl.b32 	%r42, %r1, 10;
	ld.param.u32 	%r43, [triton_gelu_kernel_param_2];
	.loc	1 19 39                         // ops.py:19:39
	mov.u32 	%r44, %tid.x;
	shl.b32 	%r45, %r44, 2;
	and.b32  	%r46, %r45, 508;
	.loc	1 19 26                         // ops.py:19:26
	or.b32  	%r47, %r42, %r46;
	or.b32  	%r48, %r47, 512;
	.loc	1 20 21                         // ops.py:20:21
	setp.lt.s32 	%p1, %r47, %r43;
	setp.lt.s32 	%p2, %r48, %r43;
	.loc	1 22 24                         // ops.py:22:24
	mul.wide.s32 	%rd7, %r47, 4;
	add.s64 	%rd1, %rd5, %rd7;
	add.s64 	%rd2, %rd1, 2048;
	.loc	1 22 16                         // ops.py:22:16
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r2;
	mov.b32 	%f18, %r3;
	mov.b32 	%f19, %r4;
	mov.b32 	%f20, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p2 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r6;
	mov.b32 	%f22, %r7;
	mov.b32 	%f23, %r8;
	mov.b32 	%f24, %r9;
	.loc	1 24 37                         // ops.py:24:37
	mul.f32 	%f25, %f17, 0f3D372713;
	mul.f32 	%f26, %f18, 0f3D372713;
	mul.f32 	%f27, %f19, 0f3D372713;
	mul.f32 	%f28, %f20, 0f3D372713;
	mul.f32 	%f29, %f21, 0f3D372713;
	mul.f32 	%f30, %f22, 0f3D372713;
	mul.f32 	%f31, %f23, 0f3D372713;
	mul.f32 	%f32, %f24, 0f3D372713;
	.loc	1 24 41                         // ops.py:24:41
	mul.f32 	%f33, %f25, %f17;
	mul.f32 	%f34, %f26, %f18;
	mul.f32 	%f35, %f27, %f19;
	mul.f32 	%f36, %f28, %f20;
	mul.f32 	%f37, %f29, %f21;
	mul.f32 	%f38, %f30, %f22;
	mul.f32 	%f39, %f31, %f23;
	mul.f32 	%f40, %f32, %f24;
	.loc	1 24 26                         // ops.py:24:26
	fma.rn.f32 	%f41, %f33, %f17, %f17;
	fma.rn.f32 	%f42, %f34, %f18, %f18;
	fma.rn.f32 	%f43, %f35, %f19, %f19;
	fma.rn.f32 	%f44, %f36, %f20, %f20;
	fma.rn.f32 	%f45, %f37, %f21, %f21;
	fma.rn.f32 	%f46, %f38, %f22, %f22;
	fma.rn.f32 	%f47, %f39, %f23, %f23;
	fma.rn.f32 	%f48, %f40, %f24, %f24;
	.loc	1 24 22                         // ops.py:24:22
	mul.f32 	%f49, %f41, 0f3F4C422A;
	mul.f32 	%f50, %f42, 0f3F4C422A;
	mul.f32 	%f51, %f43, 0f3F4C422A;
	mul.f32 	%f52, %f44, 0f3F4C422A;
	mul.f32 	%f53, %f45, 0f3F4C422A;
	mul.f32 	%f54, %f46, 0f3F4C422A;
	mul.f32 	%f55, %f47, 0f3F4C422A;
	mul.f32 	%f56, %f48, 0f3F4C422A;
	.loc	1 26 21                         // ops.py:26:21
	fma.rn.f32 	%f57, %f41, 0f3F4C422A, %f49;
	fma.rn.f32 	%f58, %f42, 0f3F4C422A, %f50;
	fma.rn.f32 	%f59, %f43, 0f3F4C422A, %f51;
	fma.rn.f32 	%f60, %f44, 0f3F4C422A, %f52;
	fma.rn.f32 	%f61, %f45, 0f3F4C422A, %f53;
	fma.rn.f32 	%f62, %f46, 0f3F4C422A, %f54;
	fma.rn.f32 	%f63, %f47, 0f3F4C422A, %f55;
	fma.rn.f32 	%f64, %f48, 0f3F4C422A, %f56;
	.loc	1 26 17                         // ops.py:26:17
	mul.f32 	%f2, %f57, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f58, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f59, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f60, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f61, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f62, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f63, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f64, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	1 27 18                         // ops.py:27:18
	add.f32 	%f65, %f1, 0fBF800000;
	add.f32 	%f66, %f3, 0fBF800000;
	add.f32 	%f67, %f5, 0fBF800000;
	add.f32 	%f68, %f7, 0fBF800000;
	add.f32 	%f69, %f9, 0fBF800000;
	add.f32 	%f70, %f11, 0fBF800000;
	add.f32 	%f71, %f13, 0fBF800000;
	add.f32 	%f72, %f15, 0fBF800000;
	.loc	1 27 30                         // ops.py:27:30
	add.f32 	%f73, %f1, 0f3F800000;
	add.f32 	%f74, %f3, 0f3F800000;
	add.f32 	%f75, %f5, 0f3F800000;
	add.f32 	%f76, %f7, 0f3F800000;
	add.f32 	%f77, %f9, 0f3F800000;
	add.f32 	%f78, %f11, 0f3F800000;
	add.f32 	%f79, %f13, 0f3F800000;
	add.f32 	%f80, %f15, 0f3F800000;
	.loc	1 27 24                         // ops.py:27:24
	mov.b32 	%r11, %f65;
	mov.b32 	%r12, %f73;
	// begin inline asm
	div.full.f32 %r10, %r11, %r12;
	// end inline asm
	mov.b32 	%f81, %r10;
	mov.b32 	%r14, %f66;
	mov.b32 	%r15, %f74;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f82, %r13;
	mov.b32 	%r17, %f67;
	mov.b32 	%r18, %f75;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f83, %r16;
	mov.b32 	%r20, %f68;
	mov.b32 	%r21, %f76;
	// begin inline asm
	div.full.f32 %r19, %r20, %r21;
	// end inline asm
	mov.b32 	%f84, %r19;
	mov.b32 	%r23, %f69;
	mov.b32 	%r24, %f77;
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f85, %r22;
	mov.b32 	%r26, %f70;
	mov.b32 	%r27, %f78;
	// begin inline asm
	div.full.f32 %r25, %r26, %r27;
	// end inline asm
	mov.b32 	%f86, %r25;
	mov.b32 	%r29, %f71;
	mov.b32 	%r30, %f79;
	// begin inline asm
	div.full.f32 %r28, %r29, %r30;
	// end inline asm
	mov.b32 	%f87, %r28;
	mov.b32 	%r32, %f72;
	mov.b32 	%r33, %f80;
	// begin inline asm
	div.full.f32 %r31, %r32, %r33;
	// end inline asm
	mov.b32 	%f88, %r31;
	.loc	1 28 14                         // ops.py:28:14
	mul.f32 	%f89, %f17, 0f3F000000;
	mul.f32 	%f90, %f18, 0f3F000000;
	mul.f32 	%f91, %f19, 0f3F000000;
	mul.f32 	%f92, %f20, 0f3F000000;
	mul.f32 	%f93, %f21, 0f3F000000;
	mul.f32 	%f94, %f22, 0f3F000000;
	mul.f32 	%f95, %f23, 0f3F000000;
	mul.f32 	%f96, %f24, 0f3F000000;
	.loc	1 28 23                         // ops.py:28:23
	add.f32 	%f97, %f81, 0f3F800000;
	add.f32 	%f98, %f82, 0f3F800000;
	add.f32 	%f99, %f83, 0f3F800000;
	add.f32 	%f100, %f84, 0f3F800000;
	add.f32 	%f101, %f85, 0f3F800000;
	add.f32 	%f102, %f86, 0f3F800000;
	add.f32 	%f103, %f87, 0f3F800000;
	add.f32 	%f104, %f88, 0f3F800000;
	.loc	1 28 19                         // ops.py:28:19
	mul.f32 	%f105, %f89, %f97;
	mul.f32 	%f106, %f90, %f98;
	mul.f32 	%f107, %f91, %f99;
	mul.f32 	%f108, %f92, %f100;
	mul.f32 	%f109, %f93, %f101;
	mul.f32 	%f110, %f94, %f102;
	mul.f32 	%f111, %f95, %f103;
	mul.f32 	%f112, %f96, %f104;
	.loc	1 30 21                         // ops.py:30:21
	add.s64 	%rd3, %rd6, %rd7;
	add.s64 	%rd4, %rd3, 2048;
	.loc	1 30 30                         // ops.py:30:30
	mov.b32 	%r34, %f105;
	mov.b32 	%r35, %f106;
	mov.b32 	%r36, %f107;
	mov.b32 	%r37, %f108;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r34, %r35, %r36, %r37 };
	// end inline asm
	mov.b32 	%r38, %f109;
	mov.b32 	%r39, %f110;
	mov.b32 	%r40, %f111;
	mov.b32 	%r41, %f112;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd4 + 0 ], { %r38, %r39, %r40, %r41 };
	// end inline asm
	.loc	1 30 4                          // ops.py:30:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/pointer/assignment2-systems/lecture_6/ops.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 72                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x41 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 111                                 // DW_AT_name
.b8 112
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 112
.b8 111
.b8 105
.b8 110
.b8 116
.b8 101
.b8 114
.b8 47
.b8 97
.b8 115
.b8 115
.b8 105
.b8 103
.b8 110
.b8 109
.b8 101
.b8 110
.b8 116
.b8 50
.b8 45
.b8 115
.b8 121
.b8 115
.b8 116
.b8 101
.b8 109
.b8 115
.b8 47
.b8 108
.b8 101
.b8 99
.b8 116
.b8 117
.b8 114
.b8 101
.b8 95
.b8 54
.b8 0
	}
	.section	.debug_macinfo	{	}
