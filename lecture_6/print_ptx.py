import os
import torch
from ops import *

def print_ptx(name: str, kernel):
    if os.environ.get("TRITON_INTERPRET") == "1":
        print("PTX is not generated when in interpret mode.")
        return
    """Print out the PTX code generated by Triton for the given `kernel`."""
    ptx_path = f"{name}-ptx.txt"
    ptx_code = list(kernel.cache[0].values())[0].asm["ptx"]
    with open(ptx_path, "w") as f:
        f.write(ptx_code)


def main(op_name: str):
    if not torch.cuda.is_available():
        return

    if op_name == "gelu":
        x = torch.randn(8192, device="cuda")
        y1 = triton_gelu(x)

        print_ptx("triton_gelu", triton_gelu_kernel)
    elif op_name == "softmax":
        x = torch.randn(16384, 16384, device="cuda")
        y1 = triton_softmax(x)

        print_ptx("triton_softmax", triton_softmax_kernel)


if __name__ == "__main__":
    main("gelu")